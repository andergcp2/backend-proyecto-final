name: Deploy micros on ECR

on:
  push:
    branches:
      - develop
  pull_request:
    branches: 
      - develop


jobs:

  test-pruebas-query:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
      matrix:
        python-version: [3.9]
    steps:
      - uses: actions/checkout@v1
      - name: Install environment
        working-directory: ./experimentos/pruebas-query
        run: |
          pip install pipenv
          pipenv sync --system --dev
          export VIRTUAL_ENV="$(pipenv --venv)" PATH="$(pipenv --venv)/bin:$PATH"
      - name: Run unit tests
        working-directory: ./experimentos/pruebas-query
        run: |
          pytest --cov=. -v -s --cov-fail-under=80

  create-docker-image:
    name: Build Image - Crear imagen docker
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Configurar Credenciales de AWS
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Iniciar sesión en AWS ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Crear, etiquetar y enviar imágen a AWS ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: test-ms
        IMAGE_TAG: latest
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  deploy:
    name: Enviar imagen docker a AWS ECS
    runs-on: ubuntu-latest
    needs: create-docker-image
    steps:
      - name: Configurar Credenciales de AWS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
 
      - name: Actualizar versión en ECS
        run: |
          aws ecs update-service --cluster cluster-abcjobs-qa --service test-ms-service --task-definition task-test-ms --force-new-deployment
